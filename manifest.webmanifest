<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>ACS Troponin Workflow — Alfred</title>
  <link rel="stylesheet" href="styles.css" />
</head>
<body>
  <main>
    <section class="card">
      <h2>Patient info</h2>
      <div>
        <label for="assay">Assay</label>
        <select id="assay">
          <option value="alinity">Abbott Alinity hs-Troponin I</option>
          <option value="other">Other assay</option>
        </select>
      </div>

      <div>
        <label>Symptom timing input</label>
        <select id="onsetMode">
          <option value="since" selected>Enter time since onset</option>
          <option value="at">Enter time of onset</option>
        </select>
      </div>

      <div id="onsetSinceWrapper">
        <div>
          <label for="onsetHours">Time since symptom onset (hours)</label>
          <input type="number" id="onsetHours" min="0" step="1" />
        </div>
        <div>
          <label for="onsetMins">Time since symptom onset (minutes)</label>
          <input type="number" id="onsetMins" min="0" max="59" step="1" />
        </div>
      </div>

      <div id="onsetAtWrapper" style="display:none">
        <label>Time of symptom onset</label>
        <input type="time" id="onsetAt" />
        <div class="help">The app will calculate time since onset automatically.</div>
      </div>

      <div>
        <label for="sex">Sex</label>
        <select id="sex">
          <option value="male">Male</option>
          <option value="female">Female</option>
        </select>
      </div>
    </section>

    <section class="card col-12" id="tropSection" style="display:none">
      <h2>Troponin results</h2>
      <div>
        <label for="t0">0 h troponin</label>
        <input type="number" id="t0" step="0.1" min="0" />
      </div>
      <div>
        <label for="t1">1 h troponin</label>
        <input type="number" id="t1" step="0.1" min="0" />
        <small id="earlyNote"></small>
      </div>
      <div>
        <label for="t2">2 h troponin</label>
        <input type="number" id="t2" step="0.1" min="0" />
      </div>
      <div>
        <label for="t3">3 h troponin</label>
        <input type="number" id="t3" step="0.1" min="0" />
      </div>
    </section>

    <section class="card">
      <h2>Safety rails &amp; reminders</h2>
      <ul>
        <li>ECG within 10 minutes for suspected ACS; manage STEMI on the dedicated pathway.</li>
        <li>This helper focuses on the hs-Troponin decision algorithm only.</li>
        <li>Use clinical judgement in all cases.</li>
        <li>Consider other diagnoses if troponin negative.</li>
      </ul>
    </section>

    <section class="card">
      <h2>Result</h2>
      <div id="output"></div>
    </section>

    <button id="compute" disabled>Compute pathway</button>
  </main>

  <script>
    const ALINITY = { name: 'Abbott Alinity', delta1h: 6, delta2h: 10, delta3h: 12, poc99th: 26 };

    function $(id) { return document.getElementById(id); }
    function n(v) { const x = parseFloat(v); return isNaN(x) ? null : x; }
    function line(text, cls) {
      return `<div class="${cls}">${text}</div>`;
    }

    function onsetMode() {
      return $('onsetMode').value;
    }

    function hasOnset(){
      if (onsetMode() === 'since') {
        const h = $('onsetHours').value;
        const m = $('onsetMins').value;
        // consider provided if either field has a value (including 0)
        return (h !== '' || m !== '');
      } else {
        return $('onsetAt').value !== '';
      }
    }

    function setTropSectionVisibility(){
      const show = hasOnset();
      $('tropSection').style.display = show ? 'block' : 'none';
      $('compute').disabled = !show;
      if (!show){
        // clear output prompt to nudge the user to enter onset first
        $('output').innerHTML = line(`<h3>Enter time since symptom onset</h3><div class="help">Add hours and/or minutes to continue. The app will then guide sampling times and rule‑out logic.</div>`, 'info');
      } else {
        // once onset is provided, show step‑wise guidance if T0 is not yet entered
        const t0 = n($('t0').value);
        if (t0===null){
          // trigger the compute to show the “Step 1 — Take 0 h troponin now” panel
          document.getElementById('compute').click();
        }
      }
    }

    function updateOnsetModeUI() {
      if (onsetMode() === 'since') {
        $('onsetSinceWrapper').style.display = 'block';
        $('onsetAtWrapper').style.display = 'none';
      } else {
        $('onsetSinceWrapper').style.display = 'none';
        $('onsetAtWrapper').style.display = 'block';
      }
      setTropSectionVisibility();
    }

    function currentAssay() {
      const val = $('assay').value;
      if (val === 'alinity') return ALINITY;
      return { name: 'Other assay', delta1h: 5, delta2h: 8, delta3h: 10, poc99th: 30 };
    }

    function minutesSinceOnset() {
      if (onsetMode() === 'since') {
        const h = $('onsetHours').value;
        const m = $('onsetMins').value;
        if (h === '' && m === '') return null;
        return (parseInt(h)||0)*60 + (parseInt(m)||0);
      } else {
        const onsetTimeStr = $('onsetAt').value;
        if (!onsetTimeStr) return null;
        const now = new Date();
        const [onsetHours, onsetMinutes] = onsetTimeStr.split(':').map(Number);
        const onsetDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), onsetHours, onsetMinutes);
        let diff = (now - onsetDate) / 60000; // difference in minutes
        if (diff < 0) {
          // onset time is from previous day
          diff += 1440; // add 24 hours in minutes
        }
        return Math.floor(diff);
      }
    }

    function compute() {
      if (!hasOnset()){
        $('output').innerHTML = line(`<h3>Enter time since symptom onset</h3><div class="help">Provide hours and/or minutes to begin.</div>`, 'info');
        return;
      }
      const a = currentAssay();
      const sex = $('sex').value;
      const onsetMin = minutesSinceOnset();

      const t0 = parseFloat($('t0').value);
      const t1 = parseFloat($('t1').value);
      const t2 = parseFloat($('t2').value);
      const t3 = parseFloat($('t3').value);

      if (isNaN(t0)) {
        if (t0 === null || isNaN(t0)) {
          let nextTimingMsg = '';
          if (a === ALINITY) {
            if (onsetMin !== null && onsetMin < 60) {
              nextTimingMsg = 'Plan a 1‑hour sample from time‑0 (if T0 returns <5 AND onset <60 min, the app will switch you to a 2‑hour sample).';
            } else {
              nextTimingMsg = 'Plan a 1‑hour sample from time‑0.';
            }
          } else {
            nextTimingMsg = 'Plan a 1‑hour sample from time‑0.';
          }
          let singleRuleOutMsg = '';
          if (onsetMin >= 120) {
            singleRuleOutMsg = '<div class="help">If the 0 h troponin returns &lt; 4 ng/L, this patient will be cleared on a single troponin.</div>';
          }
          $('output').innerHTML = line(`<h3>Step 1 — Take 0 h troponin now</h3>
            <div>Assay: ${a.name}. Symptom onset: ${onsetMin !== null ? Math.floor(onsetMin / 60) + ' h ' + (onsetMin % 60) + ' min' : 'unknown'} ago.</div>
            <div><strong>Next sample:</strong> ${nextTimingMsg}</div>
            ${singleRuleOutMsg}
            <div class="help">Enter the 0 h result when available to continue.</div>`, 'info');
          return;
        }
      }

      // Existing algorithm logic below (unchanged)...
      // Example placeholder:
      $('output').innerHTML = line('<p>Algorithm result goes here.</p>', 'result');
    }

    window.onload = () => {
      $('earlyNote').innerText = 'Alinity early presenters: if onset < 60 min and T0 < 5 → the next sample is at 2 h from time‑0; otherwise 1 h from time‑0.';
      ['assay', 'sex', 't0', 't1', 't2', 't3'].forEach(id => {
        $(id).addEventListener('input', compute);
      });
      ['onsetHours','onsetMins'].forEach(id => $(id).addEventListener('input', setTropSectionVisibility));
      $('onsetMode').addEventListener('change', updateOnsetModeUI);
      $('onsetAt').addEventListener('input', setTropSectionVisibility);
      // run once on load
      updateOnsetModeUI();
      // hook compute button click to compute function
      $('compute').addEventListener('click', compute);
    };
  </script>
</body>
</html>